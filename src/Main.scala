import set1._
import set2._

object Main {
  def main(args: Array[String]): Unit = {
    println("1a")
    println(set1.Task1.apply().createComaSeparatedValueStringFromList(
      set1.Task1.apply().Constants.daysList))
    println("1a")
    println("1b")
    println(set1.Task1.apply().createComaSeparatedValueStringFromListOnlyWithP(
      set1.Task1.apply().Constants.daysList))
    println("1b")
    println("1c")
    println(set1.Task1.apply().createComaSeparatedValueStringFromListWithWhileLoop(
      set1.Task1.apply().Constants.daysList))
    println("1c")
    println("1d")
    println(set1.Task1.apply().createComaSeparatedValueStringFromListWithWhileLoopOnlyWithP(
      set1.Task1.apply().Constants.daysList))
    println("1d")
    println("2a")
    println(set1.Task2.apply().createComaSeparatedValueStringFromListUsingRecursion(
      set1.Task1.apply().Constants.daysList))
    println("2a")
    println("2b")
    println(set1.Task2.apply().createComaSeparatedValueStringFromListUsingRecursionBack(
      set1.Task1.apply().Constants.daysList))
    println("2b")
    println("3")
    println(set1.Task3.apply().createComaSeparatedValueStringFromListUsingTailRecursion(
      set1.Task1.apply().Constants.daysList))
    println("3")
    println("4a")
    println(set1.Task4.apply().createStringFromListWithFoldl(
      set1.Task1.apply().Constants.daysList))
    println("4a")
    println("4b")
    println(set1.Task4.apply().createStringFromListWithFoldr(
      set1.Task1.apply().Constants.daysList))
    println("4b")
    println("4c")
    println(set1.Task4.apply().createStringFromListWithFoldlOnlyP(
      set1.Task1.apply().Constants.daysList))
    println("4c")
    println("5")
    println(set1.Task5.apply().getProductToPriceMapWithTenPercentDiscount(
      set1.Task5.apply().Constants.PRODUCT_TO_PRICE_MAP))
    println("5")
    println("6")
    println(Task6.apply().tupleIncomingArgumentFunction(
      Task6.apply().Constant.TupleExampleStringDoubleInt))
    println("6")
    println("7")
    println(Task7.apply().optionMechanismOnProductPriceMap(
      set1.Task5.apply().Constants.PRODUCT_TO_PRICE_MAP))
    println("7")
    println("8")
    println(Task8.apply().removeZerosFromListWithRecursion(
      Task8.apply().Constants.integerList))
    println(Task8.apply().removeZerosFromListWithRecursion(
      Task8.apply().Constants.integerList2))
    println(Task8.apply().removeZerosFromListWithRecursion(
      Task8.apply().Constants.integerList3))
    println("8")
    println("9")
    println(Task9.apply().Constants.integerList)
    println("Task9.incrementEveryIntegerInListByOne()")
    println(Task9.apply().incrementEveryIntegerInListByOne(
      Task9.apply().Constants.integerList))
    println("9")
    println("10")
    println(Task10.apply().getPositiveDigitsInsideMinusFiveToTwelveSection(
      Task10.apply().Constants.doubleList))
    println("10")
    println("1")
    println(set2.Task1.apply().determineWorkOrWeekendInDaysList(
      set1.Task1.apply().Constants.daysList))
    println("1")
    println("2a")
    set2.Task2.apply().task2Demo()
    println("2a")
    println("2b")
    set2.Task2.apply().task2Demo()
    println("2b")
    println("3")
    set2.Task3.apply().intoduceOsobaObject(set2.Task3.apply().Constants.osoba1)
    set2.Task3.apply().intoduceOsobaObject(set2.Task3.apply().Constants.osoba2)
    set2.Task3.apply().intoduceOsobaObject(set2.Task3.apply().Constants.osoba3)
    set2.Task3.apply().intoduceOsobaObject(set2.Task3.apply().Constants.osoba4)
    println("3")
    println("4")
    println(set2.Task4.apply().tripleFunctionUsage(1,
      set2.Task4.apply().Constants.sumNumberWithItself))
    println("4")
    println("5")
    println(set2.Task5.apply().createOsoba2())
    println("5")
  }
}

